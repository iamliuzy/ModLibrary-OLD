name: Python CI
on: 
  push:
  pull_request:
    branches:
      - main

jobs:
  ci-windows-64:
    name: Python CI for Windows 64bit
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[ci.skip]')"
    steps: 
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4.5.0
      with:
        python-version: "3.11"
        architecture: "x64"
    - name: Install dependencies and build
      run: |
        pip install -r requirements.txt
        pip install cx_Freeze
        python setup.py build
    - name: Get commit hash
      id: get_commit
      shell: cmd
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload build artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: ModLibrary-build-win-64-${{ steps.get_commit.outputs.sha }}
        path: ./build/
  ci-windows-32:
    name: Python CI for Windows 32bit
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[ci.skip]')"
    steps: 
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4.5.0
      with:
        python-version: "3.11"
        architecture: "x86"
    - name: Install dependencies and build
      run: |
        pip install -r requirements.txt
        pip install cx_Freeze
        python setup.py build
    - name: Get commit hash
      id: get_commit
      shell: cmd
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload build artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: ModLibrary-build-win-32-${{ steps.get_commit.outputs.sha }}
        path: ./build/

  ci-unix:
    name: Python CI for Unix-Like systems
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[ci.skip]')"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4.5.0
      with:
        python-version: "3.11"
    - name: Get pack resources
      id: get-resources
      uses: SebRollen/toml-action@v1.0.2
      with:
        file: pyproject.toml
        field: tool.distutils.build_exe.include_files
    - name: Install dependencies and build
      shell: cmd
      run: |
        pip install -r requirements.txt
        python -m compileall . -l -o 2
        cd __pycache__
        set "str=.cpython-*.opt-2"
        setlocal EnableDelayedExpansion
        for /f "delims=" %%i in ('dir /b *.cpython-*.opt-2.pyc') do (
        set "var=%%i" & ren "%%i" "!var:%str%=!")
        cd ..
        xcopy __pycache__ dist\ /E /Y
        python after_build.py
    - name: Get commit hash
      id: get_commit
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
